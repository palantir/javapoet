buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.baseline:gradle-baseline-java:5.53.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.22.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.15.0'
        classpath 'com.palantir.gradle.failure-reports:gradle-failure-reports:1.9.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:3.0.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.37.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.14.0'
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.6.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.40.0'
    }
}

apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.failure-reports'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.jdks.latest'

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.baseline-class-uniqueness'
    apply plugin: 'com.palantir.jakarta-package-alignment'
    apply plugin: 'com.palantir.java-format'

    group 'com.palantir.javapoet'
    version gitVersion()

    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs += [
            '-Xlint:deprecation',
            '-Werror',
        ]
        options.errorprone {
            disable('AnnotateFormatMethod')
            disable('MissingSummary')
            disable('PreferSafeLoggableExceptions')
            disable('PreferSafeLoggingPreconditions')
            disable('ReferenceEquality')
        }
    }

    tasks.withType(Javadoc) {
        options.addBooleanOption('Werror', true)
    }

    tasks.check.dependsOn javadoc, checkUnusedDependencies, checkImplicitDependencies
}

javaVersions {
    libraryTarget = 17
    runtime = 21
}
